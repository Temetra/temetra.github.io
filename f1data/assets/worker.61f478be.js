var t=Object.defineProperty,e=Object.defineProperties,r=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,o=(e,r,n)=>r in e?t(e,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[r]=n,u=(t,e)=>{for(var r in e||(e={}))a.call(e,r)&&o(t,r,e[r]);if(n)for(var r of n(e))s.call(e,r)&&o(t,r,e[r]);return t},c=(t,n)=>e(t,r(n));import{s as i,e as l}from"./Measurement.d8df8411.js";import{I as d,J as E}from"./vendor.86c328c4.js";var m={open:async function(t){return d(t,1,{upgrade:e=>e.createObjectStore(t)}).then((e=>({get:r=>e.get(t,r),put:(r,n)=>e.put(t,n,r),clear:()=>e.clear(t)})))}};const b=t=>{throw t};let T=0;function f(t=T,e){return new Promise((r=>{t>0?setTimeout((()=>r(e)),t):r(e)}))}async function I(t,e,r){return f().then((n=>{e.run(r.createStmt),e.run(r.createIndices),t({done:"table",table:r.tablename})})).catch((t=>{throw new Error(`createTable "${r.tablename}"\n${t.message}`)}))}async function _(t,e,r,n,a){return f().then((t=>async function(t,e){return m.open(t).then((t=>t.get(e))).then((t=>t||b("not-cached"))).catch((r=>{if("not-cached"==r)return fetch(e).then((t=>t||b("not-found"))).then((t=>t.text())).then((async r=>await m.open(t).then((t=>t.put(e,r))).then((t=>r))));throw r}))}(r,a))).then((t=>function*(t,e){var r,n;const a=(null==e?void 0:e.separator)||",",s=(null==e?void 0:e.delimiter)||'"';let o=[],u=0,c=!1;for(let i=0;i<t.length;i++){let e=t.charAt(i),n=t.charAt(i+1);o[u]=o[u]||"",e==s&&c&&n==s?(o[u]+=e,i++):e!=s?e!=a||c?"\r"!=e&&"\n"!=e||c?o[u]+=e:("\r"==e&&"\n"==n&&i++,(null==(r=o[0])?void 0:r.length)>0&&(yield o),o=[],u=0):u++:c=!c}(null==(n=o[0])?void 0:n.length)>0&&(yield o)}(t))).then((t=>function(t,e,r){let n=r.next().value,a=[];for(let s of r)a.push(s.map(((t,r)=>e(t,r))));return`INSERT INTO ${t} ([${n.join("], [")}]) VALUES (${a.join("),\n(")})`}(n.tablename,n.mapToSQL,t))).then((t=>e.run(t))).then((e=>t({done:"insert",table:n.tablename}))).catch((t=>{throw new Error(`insertFetchedData "${n.tablename}" "${a}"\n${t.message}"`)}))}var g={string:t=>t?`"${t}"`:"NULL",number:t=>t?+t:"NULL",date:t=>t?new Date(t).valueOf()/1e3:"NULL",path:(...t)=>t.map((t=>t.replace(/\/+$/,""))).join("/")};const p={tablename:"circuits",createStmt:'CREATE TABLE "circuits" (\n\t"circuitId"\tINTEGER NOT NULL UNIQUE,\n\t"name"\tTEXT,\n\t"location"\tTEXT,\n\t"country"\tTEXT,\n\t"lat"\tREAL,\n\t"lng"\tREAL,\n\t"alt"\tINTEGER,\n\tPRIMARY KEY("circuitId"))',createIndices:"",mapToSQL:(t,e)=>[g.number,g.string,g.string,g.string,g.number,g.number,g.number][e](t)},N={tablename:"constructors_colours",createStmt:'CREATE TABLE "constructors_colours" (\n\t"constructorColourId"\tINTEGER NOT NULL DEFAULT 0 UNIQUE,\n\t"constructorId"\tINTEGER,\n\t"year"\tINTEGER,\n\t"colour"\tTEXT,\n\tPRIMARY KEY("constructorColourId" AUTOINCREMENT))',createIndices:"",mapToSQL:(t,e)=>[g.number,g.number,g.number,g.string][e](t)},R={tablename:"constructors",createStmt:'CREATE TABLE "constructors" (\n\t"constructorId"\tINTEGER NOT NULL UNIQUE,\n\t"name"\tTEXT,\n\t"nationality"\tTEXT,\n\tPRIMARY KEY("constructorId"))',createIndices:"",mapToSQL:(t,e)=>[g.number,g.string,g.string][e](t)},h={tablename:"drivers",createStmt:'CREATE TABLE "drivers" (\n\t"driverId"\tINTEGER NOT NULL UNIQUE,\n\t"number"\tINTEGER,\n\t"code"\tTEXT,\n\t"forename"\tTEXT,\n\t"surname"\tTEXT,\n\t"dob"\tINTEGER,\n\t"nationality"\tTEXT,\n\tPRIMARY KEY("driverId"))',createIndices:"",mapToSQL:(t,e)=>[g.number,g.number,g.string,g.string,g.string,g.date,g.string][e](t)},S={tablename:"qualifying",createStmt:'CREATE TABLE "qualifying" (\n\t"qualifyId"\tINTEGER NOT NULL UNIQUE,\n\t"raceId"\tINTEGER,\n\t"driverId"\tINTEGER,\n\t"constructorId"\tINTEGER,\n\t"number"\tINTEGER,\n\t"position"\tINTEGER,\n\t"q1"\tINTEGER,\n\t"q2"\tINTEGER,\n\t"q3"\tINTEGER,\n\tPRIMARY KEY("qualifyId"))',createIndices:"",mapToSQL:(t,e)=>[g.number,g.number,g.number,g.number,g.number,g.number,g.number,g.number,g.number][e](t)},y={tablename:"races",createStmt:'CREATE TABLE "races" (\n\t"raceId"\tINTEGER NOT NULL UNIQUE,\n\t"circuitId"\tINTEGER,\n\t"year"\tINTEGER,\n\t"round"\tINTEGER,\n\t"title"\tTEXT,\n\t"when"\tINTEGER,\n\tPRIMARY KEY("raceId"))',createIndices:"",mapToSQL:(t,e)=>[g.number,g.number,g.number,g.number,g.string,g.date][e](t)},v={tablename:"results",createStmt:'CREATE TABLE "results" (\n\t"resultId"\tINTEGER NOT NULL UNIQUE,\n\t"raceId"\tINTEGER,\n\t"driverId"\tINTEGER,\n\t"constructorId"\tINTEGER,\n\t"number"\tINTEGER,\n\t"grid"\tINTEGER,\n\t"position"\tINTEGER,\n\t"positionText"\tTEXT,\n\t"positionOrder"\tINTEGER,\n\t"points"\tREAL,\n\t"laps"\tINTEGER,\n\t"milliseconds"\tINTEGER,\n\t"fastestLap"\tINTEGER,\n\t"rank"\tINTEGER,\n\t"fastestLapTime"\tINTEGER,\n\t"fastestLapSpeed"\tREAL,\n\t"statusId"\tINTEGER,\n\tPRIMARY KEY("resultId"))',createIndices:'CREATE INDEX "results_idx" ON "results" (\n\t"raceId"\n)',mapToSQL:(t,e)=>[g.number,g.number,g.number,g.number,g.number,g.number,g.number,g.string,g.number,g.number,g.number,g.number,g.number,g.number,g.number,g.number,g.number][e](t)},w={tablename:"status",createStmt:'CREATE TABLE "status" (\n\t"statusId"\tINTEGER NOT NULL UNIQUE,\n\t"status"\tTEXT,\n\tPRIMARY KEY("statusId"))',createIndices:"",mapToSQL:(t,e)=>[g.number,g.string][e](t)};function L(t,e,r,n){let a=t.prepare(e).getAsObject(r);return n?n(a):a}const O=t=>c(u({},t),{dob:new Date(1e3*t.dob)});const G=t=>c(u({},t),{when:new Date(1e3*t.when)});const j={locateFile:t=>`https://cdn.jsdelivr.net/npm/sql.js@1.5.0/dist/${t}`};async function A(t,e,r){let n=await E(r||j).then((t=>new t.Database)).then((t=>(e({done:"database",max:19}),t)));return await I(e,n,p),await I(e,n,N),await I(e,n,R),await I(e,n,h),await I(e,n,S),await I(e,n,y),await I(e,n,v),await I(e,n,w),await async function(t,e){return fetch(e).then((t=>t||b("not-found"))).then((t=>t.json())).then((async e=>{let r=await m.open(t);return await r.get(`${t}-version`)!=e.version&&await r.clear(),r.put(`${t}-version`,e.version)})).then((t=>{}))}("f1-data",t.version),await _(e,n,"f1-data",p,t.circuits),await _(e,n,"f1-data",N,t.constructors_colours),await _(e,n,"f1-data",R,t.constructors),await _(e,n,"f1-data",h,t.drivers),await _(e,n,"f1-data",S,t.qualifying),await _(e,n,"f1-data",y,t.races),await _(e,n,"f1-data",v,t.results_2020),await _(e,n,"f1-data",v,t.results_2010),await _(e,n,"f1-data",v,t.results_2000),await _(e,n,"f1-data",w,t.status),{getCircuit:t=>function(t,e){if(e)return L(t,"select *\n\t\t\tfrom circuits\n\t\t\twhere circuitId = $circuitId",{$circuitId:e});return null}(n,t),getDriverByName:t=>function(t,e){return L(t,'select * \n\t\tfrom drivers \n\t\twhere (drivers.forename || " " || drivers.surname) \n\t\t\tlike $name\n\t\tlimit 1',{$name:e},O)}(n,t),getJoinedRaces:t=>function(t,e){return function(t,e,r,n){let a=[],s=t.prepare(e);for(s.bind(r);s.step();){let t=s.getAsObject();a.push(n?n(t):t)}return a}(t,"select races.*, circuits.*\n\t\tfrom races\n\t\tjoin circuits on races.circuitId = circuits.circuitId\n\t\twhere year = $year\n\t\torder by round",{$year:e},G)}(n,t)}}var U=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/version.5cf63b88.json"}),M=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/circuits.feeafd89.csv"}),$=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/constructors.da79143a.csv"}),z=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/constructors_colours.694100db.csv"}),Q=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/drivers.4ee647cb.csv"}),q=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/qualifying.33cdf331.csv"}),Y=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/races.187a55ac.csv"}),C=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/status.1613e1e0.csv"}),P=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/results_1950.896b23f8.csv"}),X=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/results_1960.068bb7f7.csv"}),D=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/results_1970.c0e92a5c.csv"}),H=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/results_1980.6e491d7c.csv"}),B=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/results_1990.1ca63e9b.csv"}),K=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/results_2000.95ad3368.csv"}),k=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/results_2010.b34da6ab.csv"}),x=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:"assets/results_2020.94835934.csv"}),J=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",version:U,circuits:M,constructors:$,constructors_colours:z,drivers:Q,qualifying:q,races:Y,status:C,results_1950:P,results_1960:X,results_1970:D,results_1980:H,results_1990:B,results_2000:K,results_2010:k,results_2020:x});let F={};for(let tt of Object.getOwnPropertyNames(J))F[tt]=J[tt].default.replace("assets/","");const W=self;let V=null;const Z=new class{constructor(t){this.dispatcher=t,this.requestHandlers={}}registerHandler(t,e){if(t in this.requestHandlers)throw`ServerWorkerStub: Handler already registered for '${t}'`;this.requestHandlers[t]=e}receive(t){if(t.name in this.requestHandlers){i("ServerWorkerStub",t.id);let e=e=>this.dispatcher({id:t.id,name:"progress",data:e});this.requestHandlers[t.name](t.data,e).then((e=>this.dispatcher({id:t.id,name:"payload",data:e}))).then((()=>l("ServerWorkerStub",t.id))).catch((e=>this.dispatcher({id:t.id,name:"error",data:e})))}else this.dispatcher({id:t.id,name:"error",data:"Unknown worker message"})}}((t=>W.postMessage(t)));W.onmessage=t=>Z.receive(t.data),Z.registerHandler("init",(async function(t,e){if(null==V)return T=0,A(F,e).then((t=>{V=t}));throw"Database already initialised"})),Z.registerHandler("getCircuit",(async t=>V.getCircuit(t.circuitId))),Z.registerHandler("getJoinedRaces",(async t=>V.getJoinedRaces(t.year)));
